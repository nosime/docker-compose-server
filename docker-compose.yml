networks:
  cloudflare_network:
    driver: bridge

services:
  # OpenWebUI - Chỉ qua Cloudflare tunnel
  openwebui:
    image: ghcr.io/open-webui/open-webui:latest
    container_name: openwebui
    restart: unless-stopped
    networks:
      - cloudflare_network
    ports:
      - "127.0.0.1:3000:8080"
    volumes:
      - /opt/openwebui/data:/app/backend/data
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - WEBUI_SECRET_KEY=2bef4a2d1139f27683b36219ef677f51825628566b1cac07cb440016010917ea

  # Portainer - Chỉ qua Cloudflare tunnel  
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    networks:
      - cloudflare_network
    ports:
      - "127.0.0.1:9443:9443"
      - "127.0.0.1:8000:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  # Excalidraw - Diagram drawing tool
  excalidraw:
    image: excalidraw/excalidraw:latest
    container_name: excalidraw
    restart: unless-stopped
    networks:
      - cloudflare_network
    ports:
      - "127.0.0.1:3001:80"
    volumes:
      - excalidraw_data:/opt/node_app/build/data
      - /opt/excalidraw/drawings:/opt/node_app/build/drawings
    environment:
      - TZ=Asia/Ho_Chi_Minh

  # AFFiNE PostgreSQL Database (with pgvector support)
  postgres:
    image: pgvector/pgvector:pg16
    container_name: affine_postgres
    restart: unless-stopped
    networks:
      - cloudflare_network
    volumes:
      - affine_postgres_data:/var/lib/postgresql/data
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - POSTGRES_USER=affine
      - POSTGRES_PASSWORD=A7j9K2m5N8p1Q4r7S0t3V6x9Z2b5C8f1G4h7J0k3M6n9P2q5R8s1T4v7W0z3
      - POSTGRES_DB=affine
      - POSTGRES_INITDB_ARGS=--data-checksums
      - POSTGRES_HOST_AUTH_METHOD=trust
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'affine', '-d', 'affine']
      interval: 10s
      timeout: 5s
      retries: 5

  # AFFiNE Redis Cache
  redis:
    image: redis
    container_name: affine_redis
    restart: unless-stopped
    networks:
      - cloudflare_network
    volumes:
      - affine_redis_data:/data
    environment:
      - TZ=Asia/Ho_Chi_Minh
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'incr', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # AFFiNE Migration Job
  affine_migration:
    image: ghcr.io/toeverything/affine:stable
    container_name: affine_migration_job
    restart: "no"
    networks:
      - cloudflare_network
    volumes:
      - /opt/affine/storage:/root/.affine/storage
      - /opt/affine/config:/root/.affine/config
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - REDIS_SERVER_HOST=redis
      - DATABASE_URL=postgresql://affine:A7j9K2m5N8p1Q4r7S0t3V6x9Z2b5C8f1G4h7J0k3M6n9P2q5R8s1T4v7W0z3@postgres:5432/affine
      - AFFINE_INDEXER_ENABLED=false
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ['sh', '-c', 'node ./scripts/self-host-predeploy.js']

  # AFFiNE Main Server - Knowledge base platform (Notion + Miro alternative)
  affine:
    image: ghcr.io/toeverything/affine:stable
    container_name: affine_server
    restart: unless-stopped
    networks:
      - cloudflare_network
    ports:
      - "127.0.0.1:3010:3010"
    volumes:
      - /opt/affine/storage:/root/.affine/storage
      - /opt/affine/config:/root/.affine/config
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - REDIS_SERVER_HOST=redis
      - DATABASE_URL=postgresql://affine:A7j9K2m5N8p1Q4r7S0t3V6x9Z2b5C8f1G4h7J0k3M6n9P2q5R8s1T4v7W0z3@postgres:5432/affine
      - AFFINE_INDEXER_ENABLED=false
      - NODE_ENV=production
      - AFFINE_SERVER_EXTERNAL_URL=https://affine.nosime.org
      # Optional: Email configuration
      - MAILER_HOST=smtp.gmail.com
      - MAILER_PORT=587
      - MAILER_SECURE=true
      - MAILER_USER=nosime404@gmail.com
      - MAILER_PASSWORD=uguqajmcforunxda
      - MAILER_SENDER=AFFiNE - Nosime <noreply@nosime.org> 
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      affine_migration:
        condition: service_completed_successfully

  # Docmost PostgreSQL Database
  docmost_postgres:
    image: postgres:16-alpine
    container_name: docmost_postgres
    restart: unless-stopped
    networks:
      - cloudflare_network
    volumes:
      - docmost_postgres_data:/var/lib/postgresql/data
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - POSTGRES_USER=docmost
      - POSTGRES_PASSWORD=P9k7m2X8n4R6w1E5t3Y7u9I0o2A4s6D8
      - POSTGRES_DB=docmost
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U docmost -d docmost']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Docmost Redis Cache
  docmost_redis:
    image: redis:7-alpine
    container_name: docmost_redis
    restart: unless-stopped
    networks:
      - cloudflare_network
    volumes:
      - docmost_redis_data:/data
    environment:
      - TZ=Asia/Ho_Chi_Minh
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Docmost Main Server - Team documentation platform
  docmost:
    image: docmost/docmost:latest
    container_name: docmost_server
    restart: unless-stopped
    networks:
      - cloudflare_network
    ports:
      - "127.0.0.1:3009:3000"
    volumes:
      - /opt/docmost/data:/app/data
      - /opt/docmost/uploads:/app/uploads
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - NODE_ENV=production
      - DATABASE_URL=postgresql://docmost:P9k7m2X8n4R6w1E5t3Y7u9I0o2A4s6D8@docmost_postgres:5432/docmost
      - REDIS_URL=redis://docmost_redis:6379
      - APP_SECRET=A7j9K2m5N8p1Q4r7S0t3V6x9Z2b5C8f1G4h7J0k3M6n9P2q5R8s1T4v7W0z3
      - APP_URL=https://docmost.nosime.org/
      - NEXTAUTH_SECRET=X3y6B9e2F5h8I1k4M7n0P3q6S9t2V5x8Z1b4D7g0H3j6K9m2N5p8Q1r4T7u0
      - STORAGE_DRIVER=local
      - MAIL_DRIVER=smtp
      - MAIL_HOST=smtp.gmail.com
      - MAIL_PORT=587
      - MAIL_SECURE=true
      - MAIL_USER=nosime404@gmail.com
      - MAIL_PASS=uguqajmcforunxda
      - MAIL_FROM_ADDRESS=noreply@nosime.org
      - MAIL_FROM_NAME=Docmost - Nosime
    depends_on:
      docmost_postgres:
        condition: service_healthy
      docmost_redis:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:3000/api/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Watchtower - Auto update containers
  watchtower:
    image: containrrr/watchtower:arm64v8-latest
    container_name: watchtower
    restart: unless-stopped
    networks:
      - cloudflare_network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=86400 # Check daily
      - WATCHTOWER_INCLUDE_STOPPED=true
      - WATCHTOWER_REVIVE_STOPPED=false
    # Updated to include all services
    command: --interval 86400 --cleanup openwebui excalidraw portainer affine docmost cloudflared

  # Cloudflare Tunnel - Main entry point
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    networks:
      - cloudflare_network
    command: tunnel --no-autoupdate run --token eyJhIjoiNGIxNjA1NDdkNDY0YmZiY2VmYTAyMGM3MzI1NzJkNDciLCJ0IjoiZDY1ZDQwNjctNmRmMS00YmMzLWFhOGMtMDJmMTM4MDIwZmRjIiwicyI6Ik56ZGpZVFZqTXpRdE5XSmpNQzAwWVRkbUxXSXlZbVV0TUdWbU5ESmlNems1WWpsbSJ9
    environment:
      - TZ=Asia/Ho_Chi_Minh

volumes:
  portainer_data:
  excalidraw_data:
  affine_postgres_data:
  affine_redis_data:
  docmost_postgres_data:
  docmost_redis_data: